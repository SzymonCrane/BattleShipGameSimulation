This is a sample project of BattleShip simulation game

Below is my first ever written documentation

I started from creating project files management -> 

----------------------------------------------------------------------

folder Board conatins classes which declare all sources of boarding the game

Coordinates -> defines properties of coordinate which are integers - row & column,

FiringBoard -> this class defines all actions that take place on firing board:
- Declares finding possible shot coordinates with GetOpenRandomSpaceOnBoard List, 
- To avoid shooting in the same spot more than once I've had to declare GetNearHit function which gives list of coords that have already been shot.
- GetNearShip takes coordinates and returns free spaces to shoot

GameBoard -> This class creates propertie SpaceOnBoards which is later commonly used to get a specified coordinates, also contains GameBoard() object who generates boards to fire and place ships

SpaceOnBoard -> contains definition of exact point on board, type of Point( is that a ship or free place to shoot, or even if that point has previously been shoot)
Contains:
- Status which gives back string which contains type of 'Mark' which is point status(free, ship, missed)
- IsTaken returns boolean which is obviously needed to create gaming board and fullfill it with ships.
- IsRandomCoordinateAvailable -> returns coordinates of available point on board

----------------------------------------------------------------------

Folder Game contains only one main class which is Game

Game defines object which creates boards for both player, their own and also firing boards

PlayRound method makes game play
RoundToEnd method simulates game until one of players lose

----------------------------------------------------------------------

Ships folder contains classes for each ship and:
Main class Ship, which defines properties such as Name, Width, Hits, MarkType and if it's Sunk

----------------------------------------------------------------------

Extension Class helps me to define exact place on board
also gets a type of Mark with it's type and attributes,

----------------------------------------------------------------------

Class Player which is in main GameObjects folder contains:
- properties for each player -> list of available ships, gameboard, firing board and his name
- player object
- method PlaceShips which randomly creates ships on board
- DrawBoards method generates boards look on console window
- FireShot object that generates hits and returns it's coordinates
- RandShot - object that creates randomness of firing shots
- SearchForShot returns random coordinates of last shot where is possibility to get a hit mark
- ReactToShot returns Miss or Hit dependly on if simulator's guess was correct
- ProcessShotResult - processes result of shot depending on it's mark type.

----------------------------------------------------------------------

Enumeration class helps with drawing the boards and contains enum ShotResult

----------------------------------------------------------------------

Program.cs creates game object and plays the round
